/*******************************************************************************
 * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *******************************************************************************/
Concept de.dlr.sc.virsat.model.extension.cef displayname "CEF" version 1.5 description "VirSat DLR CEF Concept"
{
	
	
	/** Structural Elements */

	StructuralElement SystemOfSystems shortname SysOfSys{
		IsRootStructuralElement;
		Applicable For [SystemOfSystems];
	}
	
	StructuralElement System shortname Sys { 
		IsRootStructuralElement;  
		Applicable For [SystemOfSystems]; 
	}
	StructuralElement SubSystem shortname SubSys {
		Applicable For [System];
	}  

	StructuralElement Equipment shortname Eqp { 
		Applicable For [Equipment,SubSystem];         
	} 
	
	
	/** Basic categories for handling data in form of mode dependent parameters */
	
	Category SystemMode {
		Applicable For [System];
		StringProperty note description "A note for the mode" default "no description";
	}
	
	Category Parameter { 
		Applicable For [System, SubSystem, Equipment];
		FloatProperty defaultValue default 0;
		Type modeValues [] of Category Value description "An Array of Values, for default and other modes";
		Type rangeValues [] of Category ParameterRange description "Add minimum and/or Maximum value for the parameter";
		StringProperty note description "A note for the Parameter";
	}
	
	Category Value {
		FloatProperty value default 0;
		Reference mode of Type SystemMode description "The Mode for which this Value is Valid. Leave unassigned if default Mode";			
	}
	
	/** System specific collection of data and parameters */
	
	Category SystemParameters {
		Applicable For [System];
		Cardinality 1;
		
		FloatProperty systemMargin description "Constant system margin" default 0 quantityKind "Dimensionless" unit "Percent";		
		Type modeDuration of Category Parameter description "Duration of the modes" quantityKind "Time" unit "Second";
	}
	
	Category SystemMassParameters {
		Applicable For [System];
		Cardinality 1;
				
		Type massLaunch of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotal of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotalWithMargin of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotalWithMarginWithSystemMargin of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massAdapter of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massPropellant of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massLaunchMax of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massBuffer of Category Parameter quantityKind "Mass" unit "Kilogram";
		
		Ref: massTotal = summary{SubSystemMassParameters.massTotal};
		Ref: massTotalWithMargin = summary{SubSystemMassParameters.massTotalWithMargin};
		Ref: massTotalWithMarginWithSystemMargin = massTotalWithMargin * (1 + SystemParameters.systemMargin);
		Ref: massLaunch = massTotalWithMarginWithSystemMargin + massPropellant + massAdapter;
		Ref: massBuffer = massLaunchMax - massLaunch;
	}
	
	Category SystemPowerParameters {
		Applicable For [System];
		Cardinality 1;
				
		Type powerAvgWithMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type powerAvgWithSystemMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type powerEnergyWithMargin of Category Parameter quantityKind "Energy and Work" unit "Joule";
		Type powerEnergyWithSystemMargin of Category Parameter quantityKind "Energy and Work" unit "Joule";
		
		Ref: powerAvgWithMargin = summary{SubSystemPowerParameters.powerAvgWithMargin};
		Ref: powerAvgWithSystemMargin = powerAvgWithMargin * (1 + SystemParameters.systemMargin);
		Ref: powerEnergyWithMargin = summary{SubSystemPowerParameters.powerEnergyWithMargin};
		Ref: powerEnergyWithSystemMargin = powerEnergyWithMargin * (1 + SystemParameters.systemMargin);
	}
	
	/** SubSystem level specific collections of data and parameters */
	
	Category SubSystemMassParameters {
		Applicable For [SubSystem];
		Cardinality 1;
				
		Type massTotal of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotalWithMargin of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massMarginPercentage of Category Parameter quantityKind "Dimensionless" unit "Percent";
		Type massMargin of Category Parameter quantityKind "Mass" unit "Kilogram";
		
		Ref: massTotal = summary{EquipmentMassParameters.massTotal, 1};
		Ref: massTotalWithMargin = summary{EquipmentMassParameters.massTotalWithMargin, 1};
		Ref: massMargin = massTotalWithMargin - massTotal;
		Ref: massMarginPercentage = (massTotalWithMargin / massTotal) - 1;
	}
	
	Category SubSystemPowerParameters {
		Applicable For [SubSystem];
		Cardinality 1;
				
		Type powerAvgWithMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type powerEnergyWithMargin of Category Parameter quantityKind "Energy and Work" unit "Joule";
		
		Ref: powerAvgWithMargin = summary{EquipmentPowerParameters.PowerAvgWithMargin, 1};
		Ref: powerEnergyWithMargin = powerAvgWithMargin * SystemParameters.modeDuration; 
	}
	
	/** Equipment level specific collections of data and parameters */
	Category EquipmentParameters {
		Applicable For [Equipment];
		Cardinality 1;
		
		FloatProperty marginMaturity description "Constant Equipment Margin" default 0 quantityKind "Dimensionless" unit "Percent";
		IntProperty unitQuantity description "Number of Equipments" default 1 quantityKind "Dimensionless" unit "No Unit";
	}
	
	Category EquipmentMassParameters {
		Applicable For [Equipment];
		Cardinality 1;
				
		Type massPerUnit of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotal of Category Parameter quantityKind "Mass" unit "Kilogram";
		Type massTotalWithMargin of Category Parameter quantityKind "Mass" unit "Kilogram";
		
		Ref: massTotal = (massPerUnit + summary{massTotal, 1}) * EquipmentParameters.unitQuantity;
		Ref: massTotalWithMargin = massTotal + (massTotal * EquipmentParameters.marginMaturity); 
	}
	
	Category EquipmentPowerParameters {
		Applicable For [Equipment];
		Cardinality 1;

		Type activeUnits of Category Parameter quantityKind "Dimensionless" unit "No Unit";
		Type powerDutyCycle of Category Parameter quantityKind "Dimensionless" unit "Percent";
		Type PowerPerUnitOn of Category Parameter quantityKind "Power" unit "Watt";
		Type PowerPerUnitStby of Category Parameter quantityKind "Power" unit "Watt";
		Type PowerPerUnitOnWithMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type PowerPerUnitStbyWithMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type PowerPerUnitAvgWithMargin of Category Parameter quantityKind "Power" unit "Watt";
		Type PowerAvgWithMargin of Category Parameter quantityKind "Power" unit "Watt";
				
		Ref: PowerPerUnitOnWithMargin = PowerPerUnitOn + (PowerPerUnitOn * EquipmentParameters.marginMaturity);
		Ref: PowerPerUnitStbyWithMargin = PowerPerUnitStby + (PowerPerUnitStby * EquipmentParameters.marginMaturity);
		Ref: PowerPerUnitAvgWithMargin = PowerPerUnitOnWithMargin * powerDutyCycle + PowerPerUnitStbyWithMargin * (1 - powerDutyCycle);
		Ref: PowerAvgWithMargin = (PowerPerUnitAvgWithMargin + summary{PowerAvgWithMargin, 1}) * activeUnits;
	}
	
	Category EquipmentTemperatureParameters {
		Applicable For [Equipment];
		Cardinality 1;
		
		Type temperatureNoOpsMax of Category Parameter quantityKind "Temperature" unit "Degree Celsius";
		Type temperatureNoOpsMin of Category Parameter quantityKind "Temperature" unit "Degree Celsius";
		Type temperatureOpsMax of Category Parameter quantityKind "Temperature" unit "Degree Celsius";
		Type temperatureOpsMin of Category Parameter quantityKind "Temperature" unit "Degree Celsius";
	}
	
	Category ParameterRange {
		Cardinality 1;
		
		FloatProperty minValue;
		FloatProperty maxValue;
		
	} 
	
	// --- Documents ---	
	Category Document description "Category to describe documents such as specifications" {
		Applicable For [SystemOfSystems, System, SubSystem, Equipment];
		StringProperty name description "Name of the document"; 
		StringProperty note description "Some not of the document";
		StringProperty url description "A reference URL to the document";
		Resource file description "The actual file of the document";
	}
	
	Category ExcelCalculation {
		Applicable For [System, SubSystem, Equipment];
		Resource excelFile;
		Reference fromVirSat2Excel[] of Type Parameter;
		Reference fromExcel2VirSat[] of Type Parameter; 
	}
}

